// firestore.rules - VERSÃO TEMPORÁRIA SIMPLIFICADA
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Função auxiliar simples
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    // REGRAS SIMPLIFICADAS PARA DEBUGGING
    
    // Usuários - acesso total ao próprio documento
    match /users/{userId} {
      allow read, write: if isAuthenticated() && isOwner(userId);
      allow create: if isAuthenticated() && isOwner(userId);
    }
    
    // Tarefas - REGRAS SIMPLIFICADAS
    match /tasks/{taskId} {
      // Leitura: apenas o dono
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      
      // Criação: validação mínima
      allow create: if isAuthenticated()
        && request.resource.data.userId == request.auth.uid
        && request.resource.data.title is string
        && request.resource.data.title.size() > 0;
      
      // Atualização: apenas o dono
      allow update: if isAuthenticated() 
        && resource.data.userId == request.auth.uid
        && request.resource.data.userId == request.auth.uid;
      
      // Exclusão: apenas o dono
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }
    
    // Transações financeiras - REGRAS SIMPLIFICADAS
    match /transactions/{transactionId} {
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      
      allow create: if isAuthenticated()
        && request.resource.data.userId == request.auth.uid
        && request.resource.data.description is string
        && request.resource.data.amount is number
        && request.resource.data.type in ['income', 'expense'];
      
      allow update: if isAuthenticated() 
        && resource.data.userId == request.auth.uid
        && request.resource.data.userId == request.auth.uid;
      
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }
    
    // Outras coleções - acesso completo ao próprio usuário
    match /goals/{goalId} {
      allow read, write: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
    }
    
    match /categories/{categoryId} {
      allow read, write: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
    }
    
    match /settings/{userId} {
      allow read, write: if isAuthenticated() && isOwner(userId);
      allow create: if isAuthenticated() && isOwner(userId);
    }
    
    // Negar acesso a tudo que não foi especificado
    match /{document=**} {
      allow read, write: if false;
    }
  }
}